import{c}from"./chunk-LOXVGAEK.js";import{a as e}from"./chunk-QVSNJCSE.js";import{Tb as o,V as p,Y as l,Yb as s}from"./chunk-QYSCFILT.js";var r="sellers",u=class i{constructor(t,a){this.baseHttpClient=t;this.httpClient=a}delete(t){return this.httpClient.delete(`${e.apiUrl}/${r}/${t}`)}create(t){return this.httpClient.post(`${e.apiUrl}/${r}`,t)}saveBilling(t){return this.httpClient.post(`${e.apiUrl}/${r}/billing`,t)}saveBankDetails(t){return this.httpClient.post(`${e.apiUrl}/${r}/account/bank`,t)}deleteBankAccount(t){return this.httpClient.delete(`${e.apiUrl}/${r}/account/bank/${t}`)}addNewCard(t){return this.httpClient.post(`${e.apiUrl}/${r}/account/card`,t)}updateCard(t,a){return this.httpClient.put(`${e.apiUrl}/${r}/account/card/${a}`,t)}removeCard(t){return this.httpClient.delete(`${e.apiUrl}/${r}/account/card/${t}`)}deleteAccount(t){return this.httpClient.delete(`${e.apiUrl}/${r}/${t}`)}saveReviewReply(t){return this.httpClient.post(`${e.apiUrl}/reviews/reply`,t)}saveWithdrawal(t){return this.httpClient.post(`${e.apiUrl}/${r}/account/balance/withdraw`,t)}activateBalance(t){return this.httpClient.post(`${e.apiUrl}/${r}/account/balance/activate`,t)}getSellerBankAccountDetails(){return this.httpClient.get(`${e.apiUrl}/${r}/account/bank`)}getWithdrawals(){return this.httpClient.get(`${e.apiUrl}/${r}/account/balance/withdraw`)}getBilling(){return this.httpClient.get(`${e.apiUrl}/billing`)}getSellerCardDetails(){return this.httpClient.get(`${e.apiUrl}/${r}/account/card`)}update(t,a){return this.httpClient.put(`${e.apiUrl}/${r}/${t}`,a)}updateImage(t,a){let n=new FormData;n.append("image",a),n.append("_method","put");let h={headers:new o({"Content-type":"multipart/form-data",Accept:"application/json"})};return this.httpClient.post(`${e.apiUrl}/${r}/${t}`,n)}getSeller(t){return this.baseHttpClient.getById(`${r}/${t}`)}getTransactions(){return this.httpClient.get(`${e.apiUrl}/${r}/account/transactions`)}getReviews(){return this.httpClient.get(`${e.apiUrl}/reviews`)}getBalance(){return this.httpClient.get(`${e.apiUrl}/${r}/account/balance`)}toggleActive(t,a){return this.httpClient.post(`${e.apiUrl}/${r}/active`,{active:a,sellerId:t})}getData(t){return this.httpClient.post(`${e.apiUrl}/${r}/search`,t)}resetPassword(t){return this.httpClient.post(`${e.apiUrl}/password/reset`,t)}static \u0275fac=function(a){return new(a||i)(l(c),l(s))};static \u0275prov=p({token:i,factory:i.\u0275fac,providedIn:"root"})};export{u as a};
